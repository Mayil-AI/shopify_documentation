App Store
 Customize typography
 Unique typefaces and other typography customizations enable merchants to showcase their brandâ€™s personality and style, and help to create a cohesive experience across the storefront and checkout.
 This guide explains how to modify checkout typography using the GraphQL Admin API's checkout branding types and their associated fields. You'll define and use typography tokens within the design system for various elements, and style other elements directly. You'll learn some sample customizations, but you can use what you've learned to make other typography customizations.
 Tip
 You can reset styles to their defaults by writing parent fields to null with the GraphQL Admin API. Refer to examples of resetting some and all values to the defaults.
 What you'll learn
 In this tutorial, you'll learn how to do the following tasks:
 Retrieve a list of your store's checkout profile IDs
 Update the checkout design system typography's base and ratio
 Apply a Shopify font to checkout's text and buttons
 Upload a custom font and apply it to checkout headings
 Customize buttons with a font that's distinct from the text
 Customize checkout's level one headings with case, weight, and size
 Requirements
 The store that you're modifying must be on a Shopify Plus plan.
 You've created a new development store with the Checkout and Customer Accounts Extensibility developer preview enabled.
 You've completed the GraphQL and REST Admin API getting started guide.
 You've either installed the GraphiQL app on your store or created an app, with the read_checkout_branding_settings and write_checkout_branding_settings access scopes.
 You're using API version 2023-10 or higher.
 You're familiar with the GraphQL Admin API's branding types.
 Custom fonts must be in either Web Open Font Format (WOFF) or WOFF2.
 To use licensed fonts legally, stores must have a webfont license.
 Step 1: Retrieve the store's checkout profile IDs
 Checkout styling properties apply to a checkout profile ID. In this step, you'll retrieve the checkout profile to which you'll apply typography changes.
 Query checkoutProfiles to retrieve a list of checkout profile IDs.
 The is_published parameter indicates which checkout profile is currently applied to your store's live checkout.
 POST https://{shop}.myshopify.com/admin/api/{api_version}/graphql.json
 GraphQL query
 1 query checkoutProfiles {
 2
    checkoutProfiles(first: 1, query: "is_published:true") {
 3
      edges {
 4
        node {
 5
          id
 6
          name
    }
 10 }
 JSON response
 1 {
 2
    "data": {
 3
      "checkoutProfiles": {
 4
        "edges": [
              "id": "gid://shopify/CheckoutProfile/1",
 8
              "name": "Default checkout profile"
 9
            }
 10
          }
 11
        ]
 12
      }
 13
    }
 14 }
 Make note of your corresponding ID from the list. You'll supply the ID in subsequent mutations.
 Step 2: Update the base size and ratio for the design system
 Note
 Modifying the base font size and ratio proportionally adjusts associated spacing values, such as margins and padding. This ensures that relative size and space are preserved.
 In this step, you'll use the checkoutBrandingUpsert mutation to update the design system's base size. You'll also update the scale ratio that's used to define all font sizes, such as what represents SMALL and LARGE:
 POST https://{shop}.myshopify.com/admin/api/{api_version}/graphql.json
 GraphQL mutation
 1 mutation checkoutBrandingUpsert($checkoutBrandingInput: CheckoutBrandingInput!, $checkoutProfileId: ID!) {
 2
    checkoutBrandingUpsert(checkoutBrandingInput: $checkoutBrandingInput, checkoutProfileId: $checkoutProfileId) {
 3
      checkoutBranding {
 4
        designSystem {
 5
          typography {
 6
            size {
 7
              base
 8
              ratio
 9
            }
 10
          }
 11
        }
 12
      }
 13
      userErrors {
 14
        field
 15
        message
 Query variables
 1 {
 2
    "checkoutProfileId": "gid://shopify/CheckoutProfile/YOUR_CHECKOUT_PROFILE_ID_HERE",
 3
    "checkoutBrandingInput": {
 4
      "designSystem": {
 5
        "typography": {
 6
          "size": {
 7
            "base": 16,
 8
            "ratio": 1.4
 9
          }
 10
        }
      "checkoutBrandingUpsert": {
 4
        "checkoutBranding": {
 5
          "designSystem": {
 6
            "typography": {
 7
              "size": {
 8
                "base": 16,
 9
                "ratio": 1.4
 10
              }
 11
            }
 12
          }
 13
        },
 14
        "userErrors": []
 15
      }
 16
    }
 17 }
 Step 3: Apply a Shopify font to primary surfaces
 Primary surfaces include text and buttons.
 Set the base font for primary surfaces with the checkoutBrandingUpsert mutation. You'll use a selection from the Shopify font library:
 POST https://{shop}.myshopify.com/admin/api/{api_version}/graphql.json
 GraphQL mutation
 1 mutation checkoutBrandingUpsert($checkoutBrandingInput: CheckoutBrandingInput!, $checkoutProfileId: ID!) {
 2
    checkoutBrandingUpsert(checkoutBrandingInput: $checkoutBrandingInput, checkoutProfileId: $checkoutProfileId) {
 3
      checkoutBranding {
 4
        designSystem {
 5
          typography {
 6
            primary {
 7
              base {
 8
                sources
 9
              }
 10
            }
 11
          }
 12
        }
 13
      }
 14
      userErrors {
 15
        field
 16
        message
 17
      }
 18
    }
 19 }
 Query variables
 1 {
 2
    "checkoutProfileId": "gid://shopify/CheckoutProfile/YOUR_CHECKOUT_PROFILE_ID_HERE",
 3
    "checkoutBrandingInput": {
 4
      "designSystem": {
 5
        "typography": {
 6
          "primary": {
 7
            "shopifyFontGroup": {
 8
              "name": "Assistant"
 9
            }
 10
          }
 11
        }
 12
      }
 13
    }
 14 }
 JSON response
 1 {
 2
    "data": {
 3
      "checkoutBrandingUpsert": {
 4
        "checkoutBranding": {
 5
          "designSystem": {
 6
            "typography": {
 7
              "primary": {
 8
                "base": {
 9
                  "sources": "local('Assistant Regular'), local('Assistant-Regular'), url(https://fonts.shopifycdn.com/assistant/assistant_n4.bcd3d09dcb631dec5544b8fb7b154ff234a44630.woff2?valid_until=MTY5OTM4MjI4Mw&hmac=407320ad74949088a8cbb72b20ec57fb0db385f085d671613b87fa52d7b77e65) format('woff2'),url(https://fonts.shopifycdn.com/assistant/assistant_n4.a2d012304becc2a26f1ded1acc136fcab85c9afd.woff?valid_until=MTY5OTM4MjI4Mw&hmac=f25fd27b446cd50eee14c14a67253f2d4deedaee34eb21ed6569da87118c5335) format('woff')"
 10
                }
 11
              }
 12
            }
 13
          }
 14
        },
 15
        "userErrors": []
 16
      }
 17
    }
 18 }
 Step 4: Apply a custom font to secondary surfaces
 Secondary surfaces include headings.
 In this step, you'll upload a custom font and set it as the base font for headings:
 Upload the custom font using one of the following methods:
 Using the Asset API resource
 Through the Files section of the Shopify admin.
 Retrieve the ID of the generic file using the files query. The following is an example:
 POST https://{shop}.myshopify.com/admin/api/{api_version}/graphql.json
 Query font files
 1 query queryFiles {
 2
    files(first: 10, query: "media_type:GenericFile") {
 3
      edges {
 4
        node {
 5
          ... on GenericFile {
 6
            id
 7
            url
 8
            fileStatus
      }
 12
    }
 13 }
 JSON response
 1 {
 2
    "data": {
 3
      "files": {
 4
        "edges": [
 5
          {
 6
            "node": {
 7
              "id": "gid://shopify/GenericFile/1",
 8
              "url": "https://cdn.shopify.com/s/files/1/0000/0001/files/font-file.woff2?v=1682440653",
 9
              "fileStatus": "READY"
 10
            }
 11
          }
 12
        ]
 13
      }
 14
    }
 15 }
 Update the checkoutBrandingUpsert mutation with the typography data using the CheckoutBrandingTypographyInput input object.
 Replace YOUR_FILE_ID_HERE with the ID of your uploaded font file.
 POST https://{shop}.myshopify.com/admin/api/{api_version}/graphql.json
 GraphQL mutation
 1 mutation checkoutBrandingUpsert($checkoutBrandingInput: CheckoutBrandingInput!, $checkoutProfileId: ID!) {
 2
    checkoutBrandingUpsert(checkoutBrandingInput: $checkoutBrandingInput, checkoutProfileId: $checkoutProfileId) {
 3
      checkoutBranding {
 4
        designSystem {
 5
          typography {
 6
            secondary {
 7
              base {
 8
                sources
 9
              }
 10
              bold {
 11
                sources
 12
              }
 13
              name
 14
            }
 15
 18
      userErrors {
 19
        code
 20
        field
 21
        message
 22
      }
 23
    }
 24 }
 Query variables
 1 {
 2
    "checkoutProfileId": "gid://shopify/CheckoutProfile/YOUR_CHECKOUT_PROFILE_ID_HERE",
 3
    "checkoutBrandingInput": {
 4
      "designSystem": {
 5
        "typography": {
 6
          "secondary": {
 7
            "customFontGroup": {
 8
              "base": {
 9
                "genericFileId": "gid://shopify/GenericFile/YOUR_FILE_ID_HERE",
 10
              },
 11
              "bold": {
 12
                "genericFileId": "gid://shopify/GenericFile/YOUR_FILE_ID_HERE",
 13
              }
 14
            }
 15
          }
 16
        }
      "checkoutBrandingUpsert": {
 4
        "checkoutBranding": {
 5
          "designSystem": {
 6
            "typography": {
 7
              "secondary": {
 8
                "base": {
 9
                  "sources": "local('font-name'), url(https://cdn.shopify.com/s/files/1/0000/0001/files/font-file.woff2?v=1681408640) format('woff2')",
 10
                },
 11
                "bold": {
 12
                  "sources": "local('font-name'), url(https://cdn.shopify.com/s/files/1/0000/0001/files/font-file.woff2?v=1681408636) format('woff2')",
 13
                },
 14
                "name": "font-name"
 15
              }
 16
            }
 17
          }
 18
        },
 19
        "userErrors": []
 20
      }
 21
    }
 22 }
 Tip
 Fonts are a separate resource that need to be downloaded by the browser before any text is rendered, which impacts the checkoutâ€™s overall performance. To optimize the checkout for performance, consider using a system font or a font from the Shopify font library rather than a custom font.
 To avoid long font load times impacting the checkout experience, use the loadingStrategy property to set how a font face is displayed based on whether and when it's downloaded and ready to use. To learn more, refer to the MDN documentation of the font-display descriptor.
 Step 5: Style buttons with the secondary font
 Now you'll update the primary button typography to match what you set for secondary surfaces, using the checkoutBrandingUpsert mutation's customizations object:
 POST https://{shop}.myshopify.com/admin/api/{api_version}/graphql.json
 GraphQL mutation
 1 mutation checkoutBrandingUpsert($checkoutBrandingInput: CheckoutBrandingInput!, $checkoutProfileId: ID!) {
 2
    checkoutBrandingUpsert(checkoutBrandingInput: $checkoutBrandingInput, checkoutProfileId: $checkoutProfileId) {
 3
      checkoutBranding {
 4
        customizations {
 5
          primaryButton {
 6
            typography {
 7
              font
 8
            }
 14
        message
 15
      }
 16
    }
 17 }
 Query variables
 1 {
 2
    "checkoutProfileId": "gid://shopify/CheckoutProfile/YOUR_CHECKOUT_PROFILE_ID_HERE",
 3
    "checkoutBrandingInput": {
 4
      "customizations": {
 5
        "primaryButton": {
 6
          "typography": {
 7
            "font": "SECONDARY"
 8
          }
 9
        }
      "checkoutBrandingUpsert": {
 4
        "checkoutBranding": {
 5
          "customizations": {
 6
            "primaryButton": {
 7
              "typography": {
 8
                "font": "SECONDARY"
 9
              }
 10
            }
 11
          }
 12
        },
 13
        "userErrors": []
 14
      }
 15
    }
 16 }
 Step 6: Style level one headings
 Now you'll use the checkoutBrandingUpsert mutation's customizations object to style the level one heading typography.
 The following example sets the font to large, relative to the base size and ratio, in uppercase and bold:
 POST https://{shop}.myshopify.com/admin/api/{api_version}/graphql.json
 GraphQL mutation
 1 mutation checkoutBrandingUpsert($checkoutBrandingInput: CheckoutBrandingInput!, $checkoutProfileId: ID!) {
 2
    checkoutBrandingUpsert(checkoutBrandingInput: $checkoutBrandingInput, checkoutProfileId: $checkoutProfileId) {
 3
      checkoutBranding {
 4
       customizations {
 5
          headingLevel1 {
 6
            typography {
 7
              size
 8
              letterCase
 9
              weight
 10
            }
      }
 14
      userErrors {
 15
        field
 16
        message
 17
      }
 18
    }
 19 }
 Query variables
 1 {
 2
    "checkoutProfileId": "gid://shopify/CheckoutProfile/YOUR_CHECKOUT_PROFILE_ID_HERE",
 3
    "checkoutBrandingInput": {
 4
      "customizations": {
 5
        "headingLevel1": {
 6
          "typography": {
 7
            "size": "LARGE",
 8
            "letterCase": "UPPER",
 9
            "weight": "BOLD"
      }
 13
    }
 14 }
 JSON response
 1 {
 2
    "data": {
 3
      "checkoutBrandingUpsert": {
 4
        "checkoutBranding": {
 5
          "customizations": {
 6
            "headingLevel1": {
 7
              "typography": {
 8
                "size": "LARGE",
 9
                "letterCase": "UPPER",
 10
                "weight": "BOLD"
 11
              }
 12
            },
 13
          }
 14
        }
 15
        "userErrors": []
 16
      }
 17
    }
 18 }
 Next steps
 Explore the GraphQL Admin API to learn more about customizing checkout's typography.
 Was this section helpful?
 YesNo
 ON THIS PAGE
 What you'll learn
 Requirements
 Step 1: Retrieve the store's checkout profile IDs
 Step 2: Update the base size and ratio for the design system
 Step 3: Apply a Shopify font to primary surfaces
 Step 4: Apply a custom font to secondary surfaces
 Step 5: Style buttons with the secondary font
 Step 6: Style level one headings
 Next steps
 Updates & News
 Developer changelog
