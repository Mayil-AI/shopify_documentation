Billing
 App Store
 Migrate saved searches to customer segments
 In API version 2022-04, we introduced the Segment object in the GraphQL Admin API, which you can use to filter out specific customers for marketing, analytics, and reporting purposes.
 As of API version 2022-04, saved searches and discounts applied to saved searches are deprecated in the GraphQL Admin API. These changes affect all merchants because all stores have built-in, default saved searches.
 This guide shows you how to migrate your app from using saved searches to customer segments.
 Caution
 Segmentation is a breaking change that replaces the GraphQL Admin API SavedSearch object and the REST Admin API CustomerSavedSearch resource. If your app uses saved searches, then you need to migrate your app to support segments.
 Requirements
 Your app can make authenticated requests to the GraphQL Admin API.
 Your app has the read_customers and write_customers access scopes. Learn how to configure your access scopes using Shopify CLI.
 Step 1: Determine if your app is affected
 Your app is affected if it uses any deprecated GraphQL Admin API types and fields or REST Admin API resources.
 To determine whether your store is using customer saved searches, you can make a request to the GraphQL Admin API. The following example shows how to retrieve the first 250 customer saved searches:
 POST https://{shop}.myshopify.com/admin/api/2022-01/graphql.json
 GraphQL query
 1 {
 2
    customerSavedSearches(first: 250) {
 3
 6
        }
 7
      }
 8
    }
 9 }
 JSON response
 1 {
 2
    "data": {
 3
      "customerSavedSearches": {
 4
        "edges": [
              "id": "gid://shopify/SavedSearch/1126907871254"
 8
            }
 9
          },
 10
          {
 11
            "node": {
 12
              "id": "gid://shopify/SavedSearch/1126907904022"
 13
            }
 14
          },
 15
          {
 16
            "node": {
 17
              "id": "gid://shopify/SavedSearch/1126907936790"
 18
            }
 19
          },
 20
          {
 21
            "node": {
 22
              "id": "gid://shopify/SavedSearch/1126907969558"
 23
            }
 24
          }
 25
        ]
 26
      }
 27
    }
 28 }
 REST Admin API
 If you're using the REST Admin API, then, you can use the GET customer_saved_searches endpoint to retrieve a list of customer saved searches for a store. The following example shows how to retrieve a list of customer saved searches:
 GET https://{store-name}.myshopify.com/admin/api/2022-01/customer_saved_searches.json
 REST body
 1 {empty}
 JSON response
 1 {
 2
    "customer_saved_searches": [
 3
      {
 4
        "id": 1126907936790,
 5
        "name": "Abandoned checkouts",
 6
        "created_at": "2020-05-11T16:19:39-07:00",
 7
        "updated_at": "2020-05-11T16:19:39-07:00",
 8
        "query": "last_abandoned_order_date:past_month"
 9
      },
 10
      {
 11
        "id": 1126907969558,
 12
        "name": "Email subscribers",
 13
        "created_at": "2020-05-11T16:19:39-07:00",
 14
        "updated_at": "2020-05-11T16:19:39-07:00",
 15
        "query": "accepts_marketing:1"
 16
      },
 17
      {
 18
        "id": 1126907871254,
 19
        "name": "New",
 20
        "created_at": "2020-05-11T16:19:39-07:00",
 21
        "updated_at": "2020-05-11T16:19:39-07:00",
 22
        "query": "orders_count:0"
 23
      },
 24
      {
 25
        "id": 1126907904022,
 26
        "name": "Returning",
 27
        "created_at": "2020-05-11T16:19:39-07:00",
 28
        "updated_at": "2020-05-11T16:19:39-07:00",
 29
        "query": "orders_count:>1"
 30
      }
 31
    ]
 32 }
 GraphQL
 This section describes deprecated GraphQL API types and fields and their replacements, changes to existing GraphQL Admin API types and fields, and recommended mutations for creating and modifying discount codes.
 Deprecated types
 The following types were removed from the GraphQL Admin API:
 DiscountCustomerSavedSearches object
 DiscountCustomerSavedSearchesInput input object
 Use the following elements instead:
 DiscountCustomerSegments object
 DiscountCustomerSegmentsInput input object
 Deprecated fields
 The following fields were removed from the GraphQL Admin API:
 savedSearches field from the PriceRuleCustomerSelection object
 savedSearchesIds field from the PriceRuleCustomerSelectionInput input object
 Use the following fields instead:
 segments field from the PriceRuleCustomerSelection object
 segmentIds field from the PriceRuleCustomerSelectionInput input object
 Recommended mutations for creating and modifying discount codes
 You can use the Discounts API to create and update discount codes for all customers or for specific customers. You can specify which customers can use which discount codes by using the GraphQL Admin API to filter out customers based on specific attributes.
 The following mutations enable you to create or modify the following discount codes:
 DiscountCodeBxgyCreate
 DiscountCodeBxgyUpdate
 DiscountCodeFreeShippingCreate
 DiscountCodeFreeShippingUpdate
 discountCodeBasicCreate
 discountCodeBasicUpdate
 REST
 The prerequisite_saved_search_ids property from the PriceRule resource in the REST Admin API is deprecated. Use the customer_segment_prerequisite_ids from the PriceRule resource instead.
 The following table lists the resources that are affected by the REST Admin API saved searches deprecation:
 A list of resources that are affected by the REST Admin API saved searches deprecation
 Resource Affects
 CustomerSavedSearch Endpoints:
 GET/admin/api/unstable/customer_saved_searches.json
 GET/admin/api/unstable/customer_saved_searches/count.json
 GET/admin/api/unstable/customer_saved_searches/{customer_saved_search_id}.json
 GET/admin/api/unstable/customer_saved_searches/{customer_saved_search_id}/customers.json
 POST/admin/api/unstable/customer_saved_searches.json
 PUT/admin/api/unstable/customer_saved_searches/{customer_saved_search_id}.json
 DELETE/admin/api/unstable/customer_saved_searches/{customer_saved_search_id}.json
 PriceRule Properties:
 prerequisite_saved_search_ids
 customer_selection: prerequisite_saved_search_ids
 Endpoints:
 GET/admin/api/unstable/price_rules.json
 GET/admin/api/unstable/price_rules/{price_rule_id}.json
 POST/admin/api/unstable/price_rules.json
 GET/admin/api/unstable/customer_saved_searches/{customer_saved_search_id}/customers.json
 PUT/admin/api/unstable/price_rules/{price_rule_id}.json
 Step 2: Determine whether you have unmigratable saved searches
 The following types of saved searches are unmigratable if they create or update price rules or discount codes:
 Free text
 Saved searches that contain more than five filters
 Unmigratable saved searches are blocked by the API validation and return an error. If an API request is blocked, then the price rule or discount code isn't affected.
 If a saved search is updated, causing it to match the unmigratable saved search criteria, and that saved search is referenced by a price rule or a discount code, then the API request is blocked, and an error message is returned.
 The following mutations are blocked if they use unmigratable saved searches:
 discountCodeBasicCreate
 discountCodeBasicUpdate
 discountCodeBxgyCreate
 discountCodeBxgyUpdate
 discountCodeFreeShippingCreate
 discountCodeFreeShippingUpdate
 priceRuleCreate
 priceRuleUpdate
 savedSearchUpdate
 Step 3: Retrieve segment migrations
 To determine which saved search corresponds to which segment, you can query SegmentMigrations. For example, use the segmentMigrations query to retrieve the segment ID that corresponds to a saved search ID.
 The following example shows how to retrieve the first three segment migrations:
 POST https://{shop}.myshopify.com/admin/api/2022-01/graphql.json
 GraphQL query
 1 query {
 2
    segmentMigrations(first: 3) {
 3
      edges {
 4
        cursor
 5
        node {
 6
          savedSearchId
 7
          segmentId
 8
        }
 9
      }
 10
      pageInfo {
 11
        hasNextPage
 12
        hasPreviousPage
 13
      }
 14
    }
 15 }
 JSON response
 1 {
 2
    "data": {
 3
      "segmentMigrations": {
 4
        "edges": [
 5
          {
 6
            "cursor": "SEGMENT_CURSOR",
 7
            "node": {
 8
              "savedSearchId": 1,
 9
              "segmentId": 1
 10
            }
 11
          },
 12
          {
 13
            "cursor": "SEGMENT_CURSOR",
 14
            "node": {
 15
              "savedSearchId": 2,
 16
              "segmentId": 2
 17
            }
 18
          },
 19
          {
 20
            "cursor": "SEGMENT_CURSOR",
 21
            "node": {
 22
              "savedSearchId": 3,
 23
              "segmentId": 3
 24
            }
 25
          }
 26
        ],
 27
        "pageInfo": {
 28
          "hasNextPage": false,
 29
          "hasPreviousPage": false
 30
        }
 31
      }
 32
    }
 33 }
 Step 4: Update your app to support segments
 If you want your app to support segments, then you can change your app to use the queries and mutations that are described in the Manage customer segments guide.
 Next steps
 Learn how to manage customer segments.
 Was this section helpful?
 YesNo
 ON THIS PAGE
 Requirements
 Step 1: Determine if your app is affected
 Step 2: Determine whether you have unmigratable saved searches
 Step 3: Retrieve segment migrations
 Step 4: Update your app to support segments
 Next steps
 Updates & News
