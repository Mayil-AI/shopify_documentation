Deployment
 Distribution
 Billing
 App Store
 Getting started with discounts
 The GraphQL Admin API enables you to create and manage many different types of discounts. This guide shows you how to create and manage automatic discounts, and introduces the basic structures for working with other types of discounts.
 What you'll learn
 In this guide, you'll learn how to do the following tasks:
 Create a Buy X Get Y automatic discount
 Add and remove products from the automatic discount
 Query an automatic discount
 Delete an automatic discount
 Requirements
 Your app can make authenticated requests to the GraphQL Admin API.
 Your app has the write_discounts access scope. Learn how to configure your access scopes using Shopify CLI.
 You've created a development store that uses generated test data.
 You're familiar with paginating results with GraphQL.
 Step 1: Create an automatic discount
 A Buy X Get Y or Spend X Get Y automatic discount is an automatic discount that offers customer discounts on select products when they add a specific product to their order. You can use the discountAutomaticBxgyCreate mutation to create a Buy X Get Y or Spend X Get Y automatic discount.
 The following example shows how to create an automatic Buy One Get One discount that's applied to a single product when it’s included in a cart. In this case, it applies a 100% discount on the second item in a cart, as long as it’s the same product as the first item. Note the ID of the created discount, as you'll use the ID to update the discount in the next step.
 Tip
 To run this mutation on your test store, you'll need to replace the product input with the global ID for a product on your store. Learn how to query the global IDs for your products.
 POST https://{shop}.myshopify.com/admin/api/{api_version}/graphql.json
 GraphQL mutation
 1 mutation {
 2
    discountAutomaticBxgyCreate(automaticBxgyDiscount: {
 3
      title: "BXGY discount test",
 4
      startsAt: "2022-01-01",
 5
      endsAt: "2024-04-18T02:38:45Z",
 6
      usesPerOrderLimit: "1",
 7
      customerBuys: {
 8
        value: {
 9
          # Accepts quantity or amount
 10
          quantity: "1"
 11
        }
 12
        items: {
 13
          # If you want a customer to get a discount regardless of the item that they
 14
          # purchase, then set the `customerBuys.items.all` to `true` instead of a
 15
          # specific product.
 16
          products: {
 17
            # Replace this product ID with the ID for a product in your store
 18
            productsToAdd: ["gid://shopify/Product/1"]
 19
          }
 20
        }
 21
      },
 22
      customerGets: {
 23
        value: {
 24
          discountOnQuantity: {
 25
            quantity: "1",
 26
            effect: {
 27
              # Change `percentage` to offer a different discount amount
 28
              percentage: 1.00
 29
            }
 30
          }
 31
        }
 32
        items: {
 33
          # If you want to apply the discount to all items, then use
 34
          # `customerGets.items.all` instead of a specific product ID.
 35
          products: {
 36
            # Replace this product ID with the ID for a product in your store
 37
            productsToAdd: ["gid://shopify/Product/1"]
 38
          }
 39
        }
 40
      }}) {
 41
      userErrors {
 42
        field
 43
        message
 44
        code
 45
      }
 46
      automaticDiscountNode {
 47
        id
 48
        automaticDiscount {
 49
          ... on DiscountAutomaticBxgy {
 50
            title
 51
            summary
 52
            status
 53
          }
 54
        }
 55
      }
 56
    }
 57 }
 JSON response
 1 {
 2
    "data": {
 3
      "discountAutomaticBxgyCreate": {
 4
        "userErrors": [],
 5
        "automaticDiscountNode": {
 6
          // Note the ID as you'll use it for updating the mutation in the next step.
 7
          "id": "gid://shopify/DiscountAutomaticNode/3",
 8
          "automaticDiscount": {
 9
            "title": "BXGY discount test",
 10
            "summary": "Buy 1 item, get 1 item free",
 11
            "status": "ACTIVE"
 12
          }
    }
 16 }
 The discount displays in the Discounts section of the Shopify admin:
 Step 2: Add and remove products from the automatic discount
 You can pass the automatic discount node ID that you retrieved in the first step to the discountAutomaticBxgyUpdate mutation to update the discount.
 The following example updates the Buy One Get One discount that you created in the first step to apply the same discount to a different set of products. As part of the mutation's input, you must explicitly add and remove entitled products by using productsToAdd and productsToRemove. You can add or remove multiple products by passing them in a comma-separated list.
 POST https://{shop}.myshopify.com/admin/api/{api_version}/graphql.json
 GraphQL mutation
 1 mutation {
 2
    # Replace the discount automatic node ID with the ID that you retrieved in the first step
 3
    discountAutomaticBxgyUpdate(id: "gid://shopify/DiscountAutomaticNode/3"
 4
      automaticBxgyDiscount: {
 5
        title: "BXGY discount update test",
 6
        customerBuys: {
 7
          value: {
 8
            quantity: "1"
 9
          }
 10
          items: {
 11
            products: {
 12
              # Replace these product IDs with new products
 13
              productsToAdd: ["gid://shopify/Product/2", "gid://shopify/Product/3"],
 14
              # Replace this product ID with the product ID that you used in the first step
 15
              productsToRemove: ["gid://shopify/Product/1"]
 16
            }
 17
          }
 18
        },
 19
        customerGets: {
 20
          value: {
 21
            discountOnQuantity: {
 22
              quantity: "1",
 23
              effect: {
 24
                percentage: 1.00
 25
              }
 26
            }
 27
          }
 28
          items: {
 29
            products: {
 30
              # Replace these product IDs with new products
 31
              productsToAdd: ["gid://shopify/Product/2", "gid://shopify/Product/3"],
 32
              # Replace this product ID with the product ID that you used in the first step
 33
              productsToRemove: ["gid://shopify/Product/1"]
 34
            }
 35
          }
 36
        }})
 37
    {
 38
      userErrors {
 39
        field
 40
        message
 41
        code
 42
      }
 43
      automaticDiscountNode {
 44
        automaticDiscount {
 45
          ... on DiscountAutomaticBxgy {
 46
            title
 47
            summary
 48
            status
 49
          }
 50
        }
 51
      }
 52
    }
 53 }
 JSON response
 1 {
 2
    "data": {
 3
      "discountAutomaticBxgyUpdate": {
 4
        "userErrors": [],
 5
        "automaticDiscountNode": {
 6
          "automaticDiscount": {
 7
            "title": "BXGY discount update test",
 8
            "summary": "Buy 1 item, get 1 item free",
 9
            "status": "ACTIVE"
      }
 13
    }
 14 }
 Step 3: Query the automatic discount
 You can query the discount to retrieve the ID and confirm the details of the discount. If you already have the ID, then you can use the automaticDiscountNode query to retrieve information about the discount. Otherwise, you can use the automaticDiscountNodes query to browse through the list of automatic discounts on your store.
 The following example uses the automaticDiscountNodes query to retrieve information about the first three Buy X Get Y automatic discounts on the store:
 POST https://{shop}.myshopify.com/admin/api/{api_version}/graphql.json
 GraphQL query
 1 {
 2
    automaticDiscountNodes (first: 3) {
 3
      edges {
 4
        node {
 5
          id
 6
          automaticDiscount {
 7
            __typename
 8
            ... on DiscountAutomaticBxgy {
 9
              status
 10
              title
 11
            }
 12
          }
 13
        }
 14
      }
 15
    }
 16 }
 JSON response
 1 {
 2
    "data": {
 3
      "automaticDiscountNodes": {
 4
        "edges": [
 5
          {
 6
            "node": {
 7
              "id": "gid://shopify/DiscountAutomaticNode/1",
 8
              "automaticDiscount": {
 9
                "__typename": "DiscountAutomaticBxgy",
 10
                "status": "EXPIRED",
 11
                "title": "AutoDiscountTest"
 12
              }
 13
            }
 14
          },
 15
          {
 16
            "node": {
 17
              "id": "gid://shopify/DiscountAutomaticNode/2",
 18
              "automaticDiscount": {
 19
                "__typename": "DiscountAutomaticBxgy",
 20
                "status": "EXPIRED",
 21
                "title": "bxgy test"
 22
              }
 23
            }
 24
          },
 25
          {
 26
            "node": {
 27
              "id": "gid://shopify/DiscountAutomaticNode/3",
 28
              "automaticDiscount": {
 29
                "__typename": "DiscountAutomaticBxgy",
 30
                "status": "ACTIVE",
 31
                "title": "Bxgy discount update test"
 32
              }
 33
            }
 34
          }
 35
        ]
 36
      }
 37
    }
 38 }
 Step 4 (Optional): Delete the automatic discount
 You can pass the discount automatic node ID to the discountAutomaticDelete mutation to permanently remove an automatic discount from the store.
 Tip
 If you want to disable the automatic discount temporarily, then you can use the discountAutomaticActivate and discountAutomaticDeactivate mutations.
 The following example deletes the discount that you created in the previous steps:
 POST https://{shop}.myshopify.com/admin/api/{api_version}/graphql.json
 GraphQL mutation
 1 mutation {
 2
    discountAutomaticDelete (id: "gid://shopify/DiscountAutomaticNode/3") {
 3
      deletedAutomaticDiscountId
 4
      userErrors {
 5
        code
 6
        field
 7
        message
 8
      }
 9
    }
 10 }
 JSON response
 1 {
 2
    "data": {
 3
      "discountAutomaticDelete": {
 4
        "deletedAutomaticDiscountId": "gid://shopify/DiscountAutomaticNode/3",
 5
        "userErrors": []
 6
      }
 7
    }
 8 }
 Related mutations and queries
 This guide demonstrated how to interact with Buy X Get Y automatic discounts. However, you can use similar mutations and queries to interact with other types of discounts. The mutations and queries that you use to interact with them share similar structures to the mutations and queries that were showcased in this guide.
 Mutations
 The following table outlines some common mutations for creating, updating, and deleting discounts of different types.
 Discount type Mutations
 Automatic:
 Buy X Get Y or Spend X Get Y
 Create: discountAutomaticBxgyCreate
 Update: discountAutomaticBxgyUpdate
 Delete: discountAutomaticDelete
 Automatic:
 Percentage or fixed amount
 Create: discountAutomaticBasicCreate
 Update: discountAutomaticBasicUpdate
 Delete: discountAutomaticDelete
 Code:
 Buy X Get Y or Spend X Get Y
 Create: discountCodeBxgyCreate
 Update: discountCodeBxgyUpdate
 Delete: discountCodeDelete
 Code:
 Percentage or fixed amount
 Create: discountCodeBasicCreate
 Update: discountCodeBasicUpdate
 Delete: discountCodeDelete
 Code:
 Free shipping
 Create: discountCodeFreeShippingCreate
 Update: discountCodeFreeShippingUpdate
 Delete: discountCodeDelete
 Automatic:
 App
 Create: discountAutomaticAppCreate
 Update: discountAutomaticAppUpdate
 Delete: discountAutomaticDelete
 Code:
 App
 Create: discountCodeAppCreate
 Update: discountCodeAppUpdate
 Delete: discountCodeDelete
 Tip
 App discounts use a function ID as input to find the function to run. This enables the creation of custom discounting behavior that isn't offered out of the box with Shopify. Learn more about how to build a discounts experience with Shopify Functions.
 Queries
 The following table outlines some common queries for interacting with automatic and code discounts.
 Discount type Query a single discount by ID Query a list of discounts
 Automatic discounts automaticDiscountNode automaticDiscountNodes
 Code discounts codeDiscountNode codeDiscountNodes
 Next steps
 Consult the GraphQL Admin API reference to learn more about the different queries and mutations that you can use to build with discounts.
 Learn how to perform bulk mutations to enable, disable, or delete large numbers of discount codes with a single request.
 Learn how to create new discount types with Shopify Functions by following our tutorial series to build a volume discount.
 Step 1: Create an automatic discount
 Step 2: Add and remove products from the automatic discount
 Step 3: Query the automatic discount
 Step 4 (Optional): Delete the automatic discount
 Related mutations and queries
