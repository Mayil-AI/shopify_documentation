Overview
 Commands
 Configuration
 Checks reference
 Migrate
 Migrating to Online Store 2.0
 Troubleshooting
 Theme Store
 Theme Check configuration
 You can configure Theme Check to override default check options, enable or disable specific checks, or point to your own custom checks. You can make these changes using a config file, disable checks using comments, or selectively run checks using command line flags. To learn more about theme check command line flags, refer to Theme Check commands.
 Config file
 Add a .theme-check.yml file to the root of your theme to override check defaults.
 You can generate a new .theme-check.yml file using the command shopify theme check --init.
 You can adjust the following settings:
 Setting Type Description
 root string If your theme isn't using the standard theme directory structure, you can provide root path for finding the templates, sections, and snippets directories. For example, If you generate code from a src directory, then you should point your Theme Check configuration at your corresponding dist directory.
 extends string or string[] If you want to compose configuration files, or start off the recommended one, you can use the extends setting to reference a configuration file. Also supports the following magic settings: theme-check:all, theme-check:recommended, theme-check:theme-app-extension. When multiple configurations are extended; objects are deep merged, arrays are concatenated, and the latest one in the list takes priority.
 require string or string[] If you want to use a custom or third party set of checks, then add a CommonJS import path.
 ignore string[] Exclude directories in the theme from Theme Check.
 Check settings object For each check, set enabled to true or false, set the check severity, set specific ignore files and paths for the check, and configure any other check options. If you created a custom check, then you need to enable it using this method.
 You can view the default values of check options in the checks reference.
 All settings are optional.
 .theme-check.yml
 1 # The directory where theme folders are located (optional)
 2 root: dist
 3
 4 # Configuration files are extensible
 5 extends:
 6
    - theme-check:recommended # or theme-check:all, theme-check:theme-app-extension
 7
    - '@acme/my-custom-checks/recommended.yml'
 8
    - '../configs/.theme-check.yml'
 9
 10 # Paths to custom checks
 11 require:
 12
    - ./path/to/my_custom_check.js # path to file or module
 13
    - '@acme/my-custom-checks'     # for node_modules checks
 14
 15 # Paths to ignore (don't lint those!)
 16 ignore:
 17
    - 'node_modules/**'
 18
    - 'snippets/*-icon.liquid' # minimatch globs are supported
 19
 20 # Disable a check
 21 TemplateLength:
 22
    enabled: false
 23
    severity: warning
 24
    ignore:
 25
      - templates/index.liquid
 26
    # Configure options for a check
 27
    max_length: 300
 28
 29 # Enable a custom check
 30 MyCustomCheck:
 31
    enabled: true
 32
    severity: error
 Check severity
 The check severity indicates the relative importance of a check to the functionality and optimization of your theme. Severity levels include error, warning, and info. You can change the severity of a check in your config file.
 If you're running theme check as a part of your CI process, the severity levels of the failed checks can determine the exit code that you receive. By default, Theme Check fails, or returns an exit code of 1, when one or more issues with severity error are detected. You can configure the severity that causes a run of theme check to fail using the --fail-level flag.
 Disable checks using Liquid comments
 You can disable all checks or specific checks using comments. You can disable checks for a specific section of your theme code, or for an entire file.
 Disable all checks for a section of your template:
 1 {% # theme-check-disable %}
 2 {% assign x = 1 %}
 3 {% # theme-check-enable %}
 Disable a specific check by including it in the comment:
 1 {% # theme-check-disable UnusedAssign %}
 2 {% assign x = 1 %}
 3 {% # theme-check-enable UnusedAssign %}
 Disable multiple checks by including them as a comma-separated list:
 1 {% # theme-check-disable UnusedAssign,SpaceInsideBraces %}
 2 {%assign x = 1%}
 3 {% # theme-check-enable UnusedAssign,SpaceInsideBraces %}
 Disable checks for the entire document by placing the comment on the first line:
 1 {% # theme-check-disable SpaceInsideBraces %}
 2
 3 {%assign x = 1%}
 Was this page helpful?
 YesNo
 Updates & News
 Developer changelog
