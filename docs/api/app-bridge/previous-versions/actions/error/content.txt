Web pixel app extensions
 Marketing activities app extensions
 Product subscription app extensions
 Error
 You can subscribe to runtime errors similar to other action types. Error actions might occur asynchronously after actions are dispatched, so itâ€™s a good idea to subscribe to app errors. Errors will be thrown in the console if there isn't an error handler defined.
 Setup
 Create an app and import the Error module from @shopify/app-bridge/actions. Note that we'll be referring to this sample application throughout the examples below.
 Note
 In the following example, config is a valid App Bridge configuration object. Learn more about configuring App Bridge.
 1 import createApp from '@shopify/app-bridge';
 2 import {Error} from '@shopify/app-bridge/actions';
 3
 4 const app = createApp(config);
 Subscribe to all errors through the app
 Call the app.error method to subscribe to all errors including those that are caused by actions. Calling app.error returns a method that you can call to unsubscribe from all errors:
 1 const unsubscribe = app.error((data) => {
 2
    // type will be the error type
 3
    // action will contain the original action including its id
 4
    // message will contain additional hints on how to fix the error
 5
    const {type, action, message} = data;
 6
    // Handle all errors here
 7
    switch(type) {
 8
       case Error.Action.INVALID_PAYLOAD:
 9
       //Do something with the error
 10
       break;
 11
    }
 12
   }
 13 });
 14
 15 // Unsubscribe from all errors
 16 unsubscribe();
 Subscribe to specific errors
 You can call app.subscribe with a specific error type to subscribe only to that error type:
 1 const unsubscribe = app.subscribe(Error.Action.INVALID_ACTION, (data) => {
 2
    // Do something with the error
 3 });
 4
 5 // Unsubscribe from the error
 6 unsubscribe();
 Subscribe to all errors for an action set
 Call the error method on any action set to subscribe to all errors that are related to that action set:
 1 import {Modal} from '@shopify/app-bridge/actions';
 2
 3 const modalOptions = {
 4
    message: 'Hello World',
 5 };
 6 const modal = Modal.create(app, modalOptions);
 7
 8 const unsubscribe = modal.error((data) => {
 9
    // type will be the error type
 10
    // action will contain the original action including its id
 11
    // message will contain additional hints on how to fix the error
 12
    const {type, action, message} = data;
 13
    // Handle all errors here
 14
    switch(type) {
 15
       case Error.Action.UNEXPECTED_ACTION:
 16
       //Do something with the error
 17
       break;
 18
    }
 19
   }
 20 });
 21
 22 // Trigger an UNEXPECTED_ACTION error by updating a modal that is not opened
 23 modal.set({title: 'Greeting'});
 24
 25 // Unsubscribe from all errors related to this flash
 26 unsubscribe();
 Subscribe to a specific error for an action set
 1 import {Modal} from '@shopify/app-bridge/actions';
 2
 3 const modalOptions = {
 4
    message: 'Hello World',
 5 };
 6 const modal = Modal.create(app, modalOptions);
 7
 8 const unsubscribe = modal.subscribe(Error.Action.UNEXPECTED_ACTION, (data) => {
 9
    // type will be the error type
 10
    // action will contain the original action including its id
 11
    // message will contain additional hints on how to fix the error
 12
    const {type, action, message} = data;
 13
    // Handle the error here
 14
   }
 15 });
 16
 17 // Trigger an UNEXPECTED_ACTION error by updating a modal that is not opened
 18 modal.set({title: 'Greeting'});
 19
 20 // Unsubscribe from UNEXPECTED_ACTION errors related to this flash
 21 unsubscribe();
 Was this section helpful?
 YesNo
 ON THIS PAGE
 Setup
 Subscribe to all errors through the app
 Subscribe to specific errors
 Subscribe to all errors for an action set
 Subscribe to a specific error for an action set
 Updates & News
 Developer changelog
