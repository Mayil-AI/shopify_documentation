Bring your own stack
 Building with the Storefront API
 Building with the Customer Account API
 Additional SDKs
 Update discount codes
 This guide shows you how to use a cart handler to apply discount codes to a cart.
 Requirements
 You've completed the quickstart guide.
 You've set up a cart handler.
 Step 1: Create a discount code form
 Use the CartForm to create a discount code form. You can use this component anywhere in the app. It will submit a form request to the /cart route's action when a visitor submits a discount code.
 File
 JavaScript
 TypeScript
 /app/components/DiscountCodeForm.jsx
 1 import {CartForm} from '@shopify/hydrogen';
 2
 3 export default function DiscountCodeForm({discountCodes}) {
 4
    const codes: string[] = discountCodes
 5
     ?.filter((discount) => discount.applicable)
 6
     ?.map(({code}) => code) || []
 7
 8
    return (
 9
      <CartForm
 10
        route="/cart"
 11
        action={CartForm.ACTIONS.DiscountCodesUpdate}
 12
        inputs={
 13
          {discountCodes: codes || []}
 14
        }
 15
      >
 16
        <input
 17
          type="text"
 18
          name="discountCode"
 19
          placeholder="Discount code"
 20
        />
 21
        <button>
 22
          Apply Discount
 23
        </button>
 24
      </CartForm>
 25
    );
 26 }
 Step 2: Handle the discount code form request
 Handle the discount code form request in an action. Use the cart, created from createCartHandler, to handle cart mutation requests to the Storefront API.
 File
 JavaScript
 TypeScript
 /app/routes/cart.jsx
 1 import {CartForm} from '@shopify/hydrogen';
 2 import invariant from 'tiny-invariant';
 3
 4 export async function action({request, context}) {
 5
    const {cart} = context;
 6
 7
    const formData = await request.formData();
 8
    const {action, inputs} = CartForm.getFormInput(formData);
 9
 10
    let result;
 11
 12
    switch(action) {
 13
      case CartForm.ACTIONS.DiscountCodesUpdate:
 14
        const formDiscountCode = formData.get('discountCode');
 15
 16
        // User inputted discount code
 17
        const discountCodes = (
 18
          formDiscountCode ? [formDiscountCode] : []
 19
        ) as string[];
 20
 21
        // Combine with discount codes already applied on cart
 22
        discountCodes.push(...inputs.discountCodes);
 23
 24
        result = await cart.updateDiscountCodes(discountCodes);
 25
        break;
 26
      default:
 27
        invariant(false, `${action} cart action is not defined`);
 28
    }
 29
 30
    // The Cart ID might change after each mutation, so update it each time.
 31
    const headers = cart.setCartId(result.cart.id);
 32
 33
    return json(
 34
      result,
 35
      {status: 200, headers},
 36
    );
 37 }
 Next steps
 Learn how to apply selected delivery options.
 Was this section helpful?
 YesNo
 ON THIS PAGE
 Requirements
 Step 1: Create a discount code form
 Step 2: Handle the discount code form request
 Next steps
 Updates & News
 Developer changelog
